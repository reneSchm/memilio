/* 
* Copyright (C) 2020-2023 German Aerospace Center (DLR-SC)
*
* Authors: Martin Siggel, Daniel Abele, Martin J. Kuehn, Jan Kleinert
*
* Contact: Martin J. Kuehn <Martin.Kuehn@DLR.de>
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

${includes}

namespace py = pybind11;

${pretty_name_function}

${simulation_vector_definition}
PYBIND11_MODULE(_simulation_${python_module_name}, m)
{
    ${population_enums}

    ${parameterset_indexing}
    pymio::bind_ParameterSet<${namespace}${parameterset}>(m, "${parameterset}");

    ${parameterset_wrapper}
    using Populations = ${population};
    pymio::bind_Population(m, "Population", mio::Tag<${namespace}${model_class_name}::Populations>{});
    ${age_group}
    pymio::bind_CompartmentalModel<${model_base_templates}>(m, "${model_class_name}Base");
    py::class_<${namespace}${model_class_name}, ${model_base}>(m, "${model_class_name}")
    ${model_init}

    ${simulation}

    m.def(
        "simulate",
        [](double t0, double tmax, double dt, const ${namespace}${model_class_name}& model) {
            return mio::simulate(t0, tmax, dt, model);
        },
        "Simulates a ${model_class_name} from t0 to tmax.", py::arg("t0"), py::arg("tmax"), py::arg("dt"), py::arg("model"));
    
    ${simulation_graph}

    m.attr("__version__") = "dev";
}
